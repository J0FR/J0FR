// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/UnZIP.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class UnZIP {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=7;
      A=$fix($opIntvlY('a','z'));
      $line=9;
      Object unZip=$fix(UnZIP.createTransducer(A));
      $line=11;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,unZip));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"main",$line);
    }
  }
  public static ITransducer createTransducer(Object Alph) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=15;
      A=$fix(Alph);
      $line=16;
      gold.structures.set.ISet $v1=$newSet();
      int $v3=$int(0);
      int $v4=$int(4);
      $v2:for (int countWord=$v3; countWord<=$v4; countWord++) {
        int $v5=$int(0);
        int $v6=$int(3);
        for (int countStrings=$v5; countStrings<=$v6; countStrings++) {
          for (Object val:GCollections.unmodifiableCollection(GCollections.asSet("aste","i"))) {
            $v1.add(GCollections.asList(countWord,countStrings,val));
          }
        }
      }
      Object Q=$fix($opUnionY($v1,GCollections.asSet("F","I","E")));
      $line=17;
      Object \u03A3=$fix($opUnionY($opUnionY(A,$opIntvlY('0','4')),GCollections.asSet('$','#','*','@')));
      $line=18;
      Object \u03A3_=$fix($opUnionY(A,GCollections.asSet('$',' ')));
      $line=19;
      Object q_0=$fix("I");
      $line=20;
      Object F=$fix(GCollections.asSet("F"));
      $line=21;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,\u03A3_,q_0,F,new GMethod(UnZIP.class,"\u03B41"),new GMethod(UnZIP.class,"g"),new GMethod(UnZIP.class,"h1")});
      if (true) break $try;
      $line=22;
      $rethrow(new RuntimeException("The function \"createTransducer(Alph:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B41(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=25;
      if ($opEqualY(q,"I")) {
        $line=25;
        $result=GCollections.asList(1,0,"i");
        if (true) break $try;
      }
      else {
        $line=26;
        $result="E";
        if (true) break $try;
      }
      $line=28;
      $rethrow(new RuntimeException("The function \"\u03B41(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object \u03B41(java.lang.Iterable $v7, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v8=GCollections.unmodifiableCollection($v7).iterator();
      Object countWord=$v8.next();
      Object countStrings=$v8.next();
      Object val=$v8.next();
      $line=32;
      if (($opEqualY(s,'$')&&$opEqualY(val,"aste"))) {
        $line=32;
        $result="F";
        if (true) break $try;
      }
      else {
        $line=34;
        if (($opEqualY(s,'*')&&$opEqualY(val,"aste"))) {
          $line=34;
          $result=GCollections.asList(countWord,countStrings,"i");
          if (true) break $try;
        }
        else {
          $line=36;
          if ((($opEqualY(s,'@')&&$opLesstY(countStrings,3))&&$opEqualY(val,"i"))) {
            $line=36;
            $result=GCollections.asList(countWord,$opModulY($opAdditY(countStrings,1),3),val);
            if (true) break $try;
          }
          else {
            $line=38;
            if ((($bool(($opMembrY(s,A)||$opEqualY(s,'#')))&&$opLesstY(countWord,4))&&$opEqualY(val,"i"))) {
              $line=38;
              $result=GCollections.asList($opModulY($opAdditY(countWord,1),4),countStrings,val);
              if (true) break $try;
            }
            else {
              $line=40;
              if (((($opMembrY(s,$opIntvlY('0','3'))&&$opEqualY(Integer.parseInt($cast(java.lang.String.class,$invokeMethod(String.class,"valueOf",true,null,new Object[]{s}))),$opModulY($opAdditY(countStrings,1),3)))&&$opEqualY(countWord,0))&&$opEqualY(val,"i"))) {
                $line=40;
                $result=GCollections.asList(0,0,"aste");
                if (true) break $try;
              }
              else {
                $line=42;
                $result="E";
                if (true) break $try;
              }
            }
          }
        }
      }
      $line=45;
      $rethrow(new RuntimeException("The function \"\u03B41(\u27E8countWord,countStrings,val\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object h1(Object q, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=48;
      if ($opMembrY(s,A)) {
        $line=49;
        $result=s;
        if (true) break $try;
      }
      else {
        $line=51;
        $result="";
        if (true) break $try;
      }
      $line=53;
      $rethrow(new RuntimeException("The function \"h1(q:Object,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"h1",$line);
    }
    return $result;
  }
  public static Object h1(java.lang.Iterable $v9, Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v10=GCollections.unmodifiableCollection($v9).iterator();
      Object countWord=$v10.next();
      Object countStrings=$v10.next();
      Object val=$v10.next();
      $line=56;
      if (($opMembrY(s,GCollections.asSet('@','#'))||$opMembrY(s,$opIntvlY('0','4')))) {
        $line=56;
        $result="";
        if (true) break $try;
      }
      else {
        $line=58;
        if ($opMembrY(s,A)) {
          $line=58;
          $result=s;
          if (true) break $try;
        }
        else {
          $line=60;
          if ($opEqualY(s,'$')) {
            $line=60;
            $result='$';
            if (true) break $try;
          }
          else {
            $line=62;
            if ($opEqualY(s,'*')) {
              $line=62;
              $result=" ";
              if (true) break $try;
            }
          }
        }
      }
      $line=65;
      $rethrow(new RuntimeException("The function \"h1(\u27E8countWord,countStrings,val\u27E9:java.lang.Iterable,s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"h1",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=69;
      $result="";
      if (true) break $try;
      $line=70;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,UnZIP.class,"g",$line);
    }
    return $result;
  }
}
